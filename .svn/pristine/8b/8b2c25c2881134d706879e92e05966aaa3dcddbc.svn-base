package com.spanel.dao;

import com.spanel.beans.Affectation;
import com.spanel.beans.Class;
import com.spanel.beans.Module;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import static com.spanel.dao.DAOUtilitary.initPreparedStatement;
import static com.spanel.dao.DAOUtilitary.silentClose;

/**
 * Created by koyre on 28/12/16.
 */
public  class AffectationDAOImpl implements AffectationDAO {

    private static final String SQL_INSERT ="INSERT INTO affectations(professor_id,class_module_id,course_id,hours,coefficient) VALUES(?,?,?,?,?) ";
    private static final String SQL_FIND_ID_IN_CLASS_MODULE = " SELECT id FROM class_module WHERE class_id =? AND module_id= ?";

    private DAOFactory daoFactory;

    public AffectationDAOImpl(DAOFactory daoFactory) { this.daoFactory = daoFactory;}


    public void create(Affectation affectation) throws DAOException {
        Connection connection=null;
        PreparedStatement preparedStatement=null;
        ResultSet AutoGeneratedValue=null;
        try {
            connection= daoFactory.getConnection();
            preparedStatement=initPreparedStatement( connection, SQL_INSERT, true,affectation.getProfessorId(),affectation.getClassModuleId(),affectation.getCourseId(),affectation.getHours(),affectation.getCoefficient());
            int status=preparedStatement.executeUpdate();
            if (status==0){
                throw new DAOException("Erreur lors de la création de la classroom, aucune nouvelle ligne n'a été ajoutée !");
            }
            AutoGeneratedValue=preparedStatement.getGeneratedKeys();
            if(AutoGeneratedValue.next()){
                affectation.setId(AutoGeneratedValue.getLong(1));
            }else {
                System.out.println("erreur à ce niveau");
                throw new DAOException("Echec de la création du classroom");
            }
        }catch(SQLException e){
            throw new DAOException(e);
        }finally {
            silentClose(preparedStatement);
            silentClose(AutoGeneratedValue);
            silentClose(connection);
        }

    }


    private Long findClassModule (String sql, Object... objects ) throws DAOException{

        Connection connection = null;
        PreparedStatement preparedStatement = null;
        ResultSet resultSet = null;
        Long id = null;

        try {
            connection = daoFactory.getConnection();
            preparedStatement = initPreparedStatement( connection, sql, false, objects );
            resultSet = preparedStatement.executeQuery();
            if ( resultSet.next() ) {
                id = resultSet.getLong("id") ;
            }
        } catch ( SQLException e ) {
            throw new DAOException( e );
        } finally {
            silentClose( resultSet, preparedStatement, connection );
        }

        return id;

    }

    @Override
    public Long findIdClassModule(Long classId, Long moduleId) {
        return findClassModule(SQL_FIND_ID_IN_CLASS_MODULE,classId,moduleId);
    }
}
